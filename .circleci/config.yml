version: 2.1
executors:
  ubuntu:
    machine:
      image: ubuntu-1604:201903-01
    environment:
      # overriding .env (default .env.example) when using API Docker container
      # https://circleci.com/docs/2.0/env-vars/#environment-variable-usage-options
      # REDIS_HOST: redis
      # POSTGRES_HOST: postgresql
      # POSTGRES_PORT: 6543
      # ELASTIC_SEARCH_HOST: elasticsearch
    working_directory: ~/stelace

jobs:
  test:
    executor: ubuntu
    steps:
      - checkout
      - run:
          name: Set Node version
          command: |
            set +e
            # Can’t use built-in nvm and update all sessions, rather use this
            curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.5/install.sh | bash
            export NVM_DIR="/opt/circleci/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            nvm install v12.14.0
            nvm alias default v12.14.0
            # Each step uses the same `$BASH_ENV`, so need to modify it
            echo 'export NVM_DIR="/opt/circleci/.nvm"' >> $BASH_ENV
            echo "[ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\"" >> $BASH_ENV
      - run:
          name: Install yarn
          command: |
            curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
            echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
            sudo apt-get update && sudo apt-get install yarn
      - restore_cache:
          name: Restore Yarn Package Cache
          keys: # Partial restoration if available: https://circleci.com/docs/2.0/caching/#yarn-node
            - yarn-packages-v1-{{ checksum "yarn.lock" }}
            - yarn-packages-v1-
      - run:
          name: Install Dependencies, purely from the lockfile
          command: yarn install --frozen-lockfile
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-v1-{{ checksum "yarn.lock" }}
          paths:
            - node_modules/
      - run:
          name: Check Coding Style (standard)
          command: npm run lint
      - run:
          name: Set .env
          command: cp .env.example .env
      - run:
          name: Increase virtual memory for ElasticSearch
          command: sudo sysctl -w vm.max_map_count=262144
      - run:
          name: Copy docker files
          command: |
            cp node_modules/stelace-server/docker-*.yml .
            cp node_modules/stelace-server/Dockerfile* .
      - run:
          name: Copy SSL certificates
          command: |
            mkdir -p test/ssl
            cp node_modules/stelace-server/test/ssl/* test/ssl
      - run:
          name: Pull ElasticSearch docker image
          command: |
            docker pull abruere/elasticsearch:latest
            docker tag abruere/elasticsearch:latest stelace_elasticsearch
      - run:
          name: Docker Compose (databases)
          command: |
            docker-compose -f docker-compose.prod.yml -f docker-compose.override.yml \
              up -d postgresql elasticsearch redis
      - run:
          name: Wait for PostgreSQL, ElasticSearch and Redis init
          no_output_timeout: 1m
          command: |
            until nc -z -v -w30 localhost 6543 && nc -z -v -w30 localhost 9200 && nc -z -v -w30 localhost 6379
            do
              echo "Waiting for PostgreSQL, ElasticSearch and Redis…"
              sleep 2
            done
            sleep 15
      - run:
          name: Install server plugins
          command: |
            yarn plugins:server --save
            sed -i 's|^\(INSTALLED_PLUGINS=\).*$|\1'"$INSTALLED_PLUGINS"'|' .env
      - run:
          name: Run plugin tests
          no_output_timeout: 10m
          command: |
            mkdir -p /tmp/test-results
            yarn test:ci | \
              # Clean up by excluding non-xml lines (not starting with '<' or not indented)
              # and empty/all-whitespace lines,
              # using [:space:] rather than \s, not parsed correctly by some versions of grep
              grep -Ei '^[[:space:]<]' | grep -Ev '^[[:space:]]*$' > \
              /tmp/test-results/plugin-test-results.xml
      - store_artifacts:
          path: /tmp/test-results
          prefix: tests
      - store_test_results:
          path: /tmp/test-results

workflows:
  version: 2
  test:
    jobs:
      - test
